swagger: "2.0"
info:
  version: "0.0.1"
  title: ApolloX

host: localhost:3000
basePath: /

schemes:
  - http
  - https
consumes:
  - application/json
  - application/x-www-form-urlencoded
  - application/octet-stream
  - multipart/form-data
produces:
  - application/json

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
      The following syntax must be used in the 'Authorization' header :
      "Bearer {token}"

paths:
  /user:
    x-swagger-router-controller: main_controller
    get:
      description: User profile
      operationId: getUser
      security:
        - Bearer: []
      x-security-scopes:
        - user
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Message"
    put:
      description: Update User
      operationId: updateUser
      security:
        - Bearer: []
      x-security-scopes:
        - user
      parameters:
        - name: userUpdate
          in: body
          schema:
            properties:
              name:
                type: string
              email_id:
                type: string
              phone_no:
                type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Message"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Message"

  /auth/login/otp:
    x-swagger-router-controller: main_controller
    post:
      description: Login User through OTP. Send ID token
      operationId: userLoginOtp
      parameters:
        - name: userLoginOtp
          in: body
          schema:
            properties:
              token:
                type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Message"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Message"

  /auth/login/google:
    x-swagger-router-controller: main_controller
    post:
      description: Login User through google. Send ID token
      operationId: userLoginGoogle
      parameters:
        - name: userLoginGoogle
          in: body
          schema:
            properties:
              token:
                type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Message"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Message"

  /groups/all:
    x-swagger-router-controller: main_controller
    get:
      description: Get list of groups
      operationId: getAllGroups
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ArrayGroups"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Message"

  /groups/my:
    x-swagger-router-controller: main_controller
    get:
      description: Get list of groups joined my user
      operationId: getAllGroupsJoined
      security:
        - Bearer: []
      x-security-scopes:
        - user
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ArrayGroups"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Message"

  /group/join:
    x-swagger-router-controller: main_controller
    post:
      description: Join group. Give group_id
      operationId: joinGroup
      security:
        - Bearer: []
      x-security-scopes:
        - user
      parameters:
        - name: userGroupJoin
          in: body
          schema:
            properties:
              group_id:
                type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Message"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Message"

  /chat/image:
    x-swagger-router-controller: main_controller
    post:
      description: Upload image
      operationId: chatImageUpload
      # security:
      #   - Bearer: []
      # x-security-scopes:
      #   - user
      consumes:
        - multipart/form-data
      parameters:
        - name: image
          in: formData
          required: true
          type: file
        - name: group_id
          in: formData
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Message"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Message"

  /images/chat/groups/{name}:
    x-swagger-router-controller: main_controller
    get:
      operationId: chatImageAccessGroups
      description: Get uploaded image as file. Path from db
      parameters:
        - name: name
          in: path
          required: true
          type: string
      responses:
        "200":
          description: "Image"
          schema:
            type: file
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/Message"

  /group/users/all/{group_id}:
    x-swagger-router-controller: main_controller
    get:
      operationId: getUsersForGroup
      description: Get list of users joined given group
      parameters:
        - name: group_id
          in: path
          required: true
          type: string
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ArrayUsers"
        default:
          description: "Error"
          schema:
            $ref: "#/definitions/Message"



# -----------------------------------------------------------
definitions:
  Message:
    required:
      - message
    properties:
      message:
        type: string

  User:
    properties:
      uid:
        type: string
      name:
        type: string
      email_id:
        type: string
      phone_no:
        type: string
      role:
        type: string
      create_time:
        type: string

  ArrayUsers:
    type: array
    items:
      $ref: "#/definitions/User"

  UserLogin:
    properties:
      email:
        type: string
      password:
        type: string

  Group:
    properties:
      uid:
        type: string
      name:
        type: string
      create_time:
        type: string
      user_count:
        type: integer

  ArrayGroups:
    type: array
    items:
      $ref: "#/definitions/Group"

